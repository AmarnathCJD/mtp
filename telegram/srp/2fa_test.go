package srp

import (
	"github.com/stretchr/testify/assert"
	"github.com/xelaj/mtproto/telegram"
	"testing"
)

func Test2FA(t *testing.T) {
	ap := &telegram.AccountPassword{
		HasRecovery:     true,
		HasSecureValues: false,
		HasPassword:     true,
		CurrentAlgo: &telegram.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{
			Salt1: []uint8{
				0x4d, 0x11, 0xfb, 0x6b, 0xec, 0x38, 0xf9, 0xd2, 0x54, 0x6b, 0xb0, 0xf6, 0x1e, 0x4f, 0x1c, 0x99,
				0xa1, 0xbc, 0x0d, 0xb8, 0xf0, 0xd5, 0xf3, 0x5b, 0x12, 0x91, 0xb3, 0x7b, 0x21, 0x31, 0x23, 0xd7,
				0xed, 0x48, 0xf3, 0xc6, 0x79, 0x4d, 0x49, 0x5b,
			},
			Salt2: []uint8{
				0xa1, 0xb1, 0x81, 0xaa, 0xfe, 0x88, 0x18, 0x86, 0x80, 0xae, 0x32, 0x86, 0x0d, 0x60, 0xbb, 0x01,
			},
			G: 3,
			P: []uint8{
				0xc7, 0x1c, 0xae, 0xb9, 0xc6, 0xb1, 0xc9, 0x04, 0x8e, 0x6c, 0x52, 0x2f, 0x70, 0xf1, 0x3f, 0x73,
				0x98, 0x0d, 0x40, 0x23, 0x8e, 0x3e, 0x21, 0xc1, 0x49, 0x34, 0xd0, 0x37, 0x56, 0x3d, 0x93, 0x0f,
				0x48, 0x19, 0x8a, 0x0a, 0xa7, 0xc1, 0x40, 0x58, 0x22, 0x94, 0x93, 0xd2, 0x25, 0x30, 0xf4, 0xdb,
				0xfa, 0x33, 0x6f, 0x6e, 0x0a, 0xc9, 0x25, 0x13, 0x95, 0x43, 0xae, 0xd4, 0x4c, 0xce, 0x7c, 0x37,
				0x20, 0xfd, 0x51, 0xf6, 0x94, 0x58, 0x70, 0x5a, 0xc6, 0x8c, 0xd4, 0xfe, 0x6b, 0x6b, 0x13, 0xab,
				0xdc, 0x97, 0x46, 0x51, 0x29, 0x69, 0x32, 0x84, 0x54, 0xf1, 0x8f, 0xaf, 0x8c, 0x59, 0x5f, 0x64,
				0x24, 0x77, 0xfe, 0x96, 0xbb, 0x2a, 0x94, 0x1d, 0x5b, 0xcd, 0x1d, 0x4a, 0xc8, 0xcc, 0x49, 0x88,
				0x07, 0x08, 0xfa, 0x9b, 0x37, 0x8e, 0x3c, 0x4f, 0x3a, 0x90, 0x60, 0xbe, 0xe6, 0x7c, 0xf9, 0xa4,
				0xa4, 0xa6, 0x95, 0x81, 0x10, 0x51, 0x90, 0x7e, 0x16, 0x27, 0x53, 0xb5, 0x6b, 0x0f, 0x6b, 0x41,
				0x0d, 0xba, 0x74, 0xd8, 0xa8, 0x4b, 0x2a, 0x14, 0xb3, 0x14, 0x4e, 0x0e, 0xf1, 0x28, 0x47, 0x54,
				0xfd, 0x17, 0xed, 0x95, 0x0d, 0x59, 0x65, 0xb4, 0xb9, 0xdd, 0x46, 0x58, 0x2d, 0xb1, 0x17, 0x8d,
				0x16, 0x9c, 0x6b, 0xc4, 0x65, 0xb0, 0xd6, 0xff, 0x9c, 0xa3, 0x92, 0x8f, 0xef, 0x5b, 0x9a, 0xe4,
				0xe4, 0x18, 0xfc, 0x15, 0xe8, 0x3e, 0xbe, 0xa0, 0xf8, 0x7f, 0xa9, 0xff, 0x5e, 0xed, 0x70, 0x05,
				0x0d, 0xed, 0x28, 0x49, 0xf4, 0x7b, 0xf9, 0x59, 0xd9, 0x56, 0x85, 0x0c, 0xe9, 0x29, 0x85, 0x1f,
				0x0d, 0x81, 0x15, 0xf6, 0x35, 0xb1, 0x05, 0xee, 0x2e, 0x4e, 0x15, 0xd0, 0x4b, 0x24, 0x54, 0xbf,
				0x6f, 0x4f, 0xad, 0xf0, 0x34, 0xb1, 0x04, 0x03, 0x11, 0x9c, 0xd8, 0xe3, 0xb9, 0x2f, 0xcc, 0x5b,
			},
		},
		SrpB: []uint8{
			0x9c, 0x52, 0x40, 0x1a, 0x6a, 0x80, 0x84, 0xec, 0x82, 0xf0, 0x1c, 0x37, 0x25, 0xd3, 0xfb, 0x44,
			0x8b, 0xd2, 0xf0, 0xc9, 0x09, 0xf9, 0xd9, 0x77, 0x26, 0xea, 0xc4, 0xb7, 0xa7, 0x41, 0x72, 0xd9,
			0x52, 0xf0, 0x24, 0x66, 0xbe, 0x67, 0x34, 0xfa, 0x27, 0x4d, 0x2b, 0x74, 0x29, 0xe2, 0x73, 0x97,
			0xf1, 0x03, 0x72, 0xd6, 0x6b, 0x40, 0x0b, 0x80, 0xa5, 0xc5, 0xae, 0x3f, 0x28, 0xb1, 0x7b, 0xf3,
			0x10, 0x5d, 0x7a, 0x2d, 0x2a, 0x88, 0x59, 0x98, 0xcd, 0xc2, 0xde, 0xfc, 0x20, 0x8a, 0xec, 0x21,
			0x7a, 0xb5, 0x88, 0x59, 0xa9, 0xab, 0xc2, 0x37, 0x4a, 0xd9, 0x3d, 0xc2, 0x85, 0xf4, 0xb3, 0xfb,
			0xca, 0xff, 0x41, 0x43, 0xd7, 0x88, 0x8f, 0x24, 0x25, 0xbd, 0x2f, 0xb7, 0x11, 0xb2, 0x56, 0x09,
			0xce, 0xb2, 0x17, 0x57, 0xd9, 0x35, 0xb1, 0xef, 0x2f, 0x04, 0x21, 0x73, 0xad, 0x0c, 0xe2, 0xfe,
			0x0e, 0x47, 0x4d, 0xac, 0x53, 0x91, 0x4b, 0xd2, 0x5a, 0x8a, 0x9a, 0xed, 0x4a, 0xea, 0x89, 0x53,
			0xd5, 0x5c, 0xb8, 0x86, 0x21, 0xdb, 0x37, 0xb8, 0x71, 0xea, 0x0d, 0x04, 0x39, 0x3a, 0xc0, 0x98,
			0x7f, 0x68, 0x09, 0x4c, 0xcc, 0x9d, 0xe8, 0x23, 0x92, 0x51, 0x37, 0x5d, 0x8f, 0xff, 0xd2, 0x63,
			0x31, 0x6c, 0xd5, 0x28, 0xc0, 0x97, 0xb7, 0xbc, 0x9f, 0xb9, 0x19, 0xfb, 0xed, 0xb7, 0x6c, 0x52,
			0x5d, 0xf3, 0x41, 0x3c, 0x37, 0x4e, 0xe0, 0x76, 0xd9, 0x7a, 0x1e, 0x6d, 0x35, 0x2b, 0xb7, 0xcc,
			0x80, 0xfd, 0x13, 0x65, 0x1b, 0x04, 0xb3, 0x2e, 0x2e, 0x48, 0xc5, 0x26, 0x81, 0x50, 0x84, 0x2c,
			0xfd, 0x07, 0xcf, 0x85, 0x59, 0x58, 0xb1, 0xb5, 0xea, 0x9c, 0x36, 0xfd, 0xad, 0x69, 0x7f, 0xe3,
			0xae, 0xc8, 0xdc, 0xc6, 0xb1, 0xef, 0xec, 0x36, 0x87, 0x4a, 0xf2, 0x26, 0x20, 0x46, 0x76, 0xcf,
		},
		SrpId:                   -827569366116301958,
		Hint:                    "",
		EmailUnconfirmedPattern: "",
		NewAlgo: &telegram.PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{
			Salt1: []uint8{
				0x4d, 0x11, 0xfb, 0x6b, 0xec, 0x38, 0xf9, 0xd2,
			},
			Salt2: []uint8{
				0xa1, 0xb1, 0x81, 0xaa, 0xfe, 0x88, 0x18, 0x86, 0x80, 0xae, 0x32, 0x86, 0x0d, 0x60, 0xbb, 0x01,
			},
			G: 3,
			P: []uint8{
				0xc7, 0x1c, 0xae, 0xb9, 0xc6, 0xb1, 0xc9, 0x04, 0x8e, 0x6c, 0x52, 0x2f, 0x70, 0xf1, 0x3f, 0x73,
				0x98, 0x0d, 0x40, 0x23, 0x8e, 0x3e, 0x21, 0xc1, 0x49, 0x34, 0xd0, 0x37, 0x56, 0x3d, 0x93, 0x0f,
				0x48, 0x19, 0x8a, 0x0a, 0xa7, 0xc1, 0x40, 0x58, 0x22, 0x94, 0x93, 0xd2, 0x25, 0x30, 0xf4, 0xdb,
				0xfa, 0x33, 0x6f, 0x6e, 0x0a, 0xc9, 0x25, 0x13, 0x95, 0x43, 0xae, 0xd4, 0x4c, 0xce, 0x7c, 0x37,
				0x20, 0xfd, 0x51, 0xf6, 0x94, 0x58, 0x70, 0x5a, 0xc6, 0x8c, 0xd4, 0xfe, 0x6b, 0x6b, 0x13, 0xab,
				0xdc, 0x97, 0x46, 0x51, 0x29, 0x69, 0x32, 0x84, 0x54, 0xf1, 0x8f, 0xaf, 0x8c, 0x59, 0x5f, 0x64,
				0x24, 0x77, 0xfe, 0x96, 0xbb, 0x2a, 0x94, 0x1d, 0x5b, 0xcd, 0x1d, 0x4a, 0xc8, 0xcc, 0x49, 0x88,
				0x07, 0x08, 0xfa, 0x9b, 0x37, 0x8e, 0x3c, 0x4f, 0x3a, 0x90, 0x60, 0xbe, 0xe6, 0x7c, 0xf9, 0xa4,
				0xa4, 0xa6, 0x95, 0x81, 0x10, 0x51, 0x90, 0x7e, 0x16, 0x27, 0x53, 0xb5, 0x6b, 0x0f, 0x6b, 0x41,
				0x0d, 0xba, 0x74, 0xd8, 0xa8, 0x4b, 0x2a, 0x14, 0xb3, 0x14, 0x4e, 0x0e, 0xf1, 0x28, 0x47, 0x54,
				0xfd, 0x17, 0xed, 0x95, 0x0d, 0x59, 0x65, 0xb4, 0xb9, 0xdd, 0x46, 0x58, 0x2d, 0xb1, 0x17, 0x8d,
				0x16, 0x9c, 0x6b, 0xc4, 0x65, 0xb0, 0xd6, 0xff, 0x9c, 0xa3, 0x92, 0x8f, 0xef, 0x5b, 0x9a, 0xe4,
				0xe4, 0x18, 0xfc, 0x15, 0xe8, 0x3e, 0xbe, 0xa0, 0xf8, 0x7f, 0xa9, 0xff, 0x5e, 0xed, 0x70, 0x05,
				0x0d, 0xed, 0x28, 0x49, 0xf4, 0x7b, 0xf9, 0x59, 0xd9, 0x56, 0x85, 0x0c, 0xe9, 0x29, 0x85, 0x1f,
				0x0d, 0x81, 0x15, 0xf6, 0x35, 0xb1, 0x05, 0xee, 0x2e, 0x4e, 0x15, 0xd0, 0x4b, 0x24, 0x54, 0xbf,
				0x6f, 0x4f, 0xad, 0xf0, 0x34, 0xb1, 0x04, 0x03, 0x11, 0x9c, 0xd8, 0xe3, 0xb9, 0x2f, 0xcc, 0x5b,
			},
		},
		NewSecureAlgo: &telegram.SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{
			Salt: []uint8{
				0xbf, 0x25, 0xa5, 0x99, 0xac, 0x64, 0x3f, 0xa8,
			},
		},
		SecureRandom: []uint8{
			0x59, 0x21, 0x33, 0x8a, 0x67, 0x03, 0x93, 0xd2, 0xec, 0xf1, 0x0a, 0xae, 0x63, 0x30, 0xb7, 0xbc,
			0xe7, 0x22, 0x4f, 0xbc, 0x25, 0x4e, 0x0f, 0xe4, 0x1c, 0xfb, 0x31, 0xe8, 0xb4, 0x86, 0xcc, 0xfd,
			0xf6, 0xd0, 0xae, 0xf5, 0x94, 0x9a, 0x89, 0x00, 0xb6, 0x87, 0x02, 0x89, 0x3d, 0xc9, 0xee, 0xa2,
			0xf4, 0x68, 0xa8, 0x39, 0x5e, 0x32, 0x4b, 0x7e, 0x97, 0x91, 0x25, 0x50, 0x63, 0x32, 0x7c, 0x44,
			0x34, 0xd8, 0xcf, 0x20, 0x82, 0xba, 0x15, 0x94, 0xfa, 0x11, 0x83, 0x78, 0x59, 0x2c, 0x17, 0x42,
			0xa3, 0x92, 0x9b, 0xfb, 0x7a, 0xab, 0x42, 0x80, 0x08, 0x3e, 0xfc, 0x45, 0x6c, 0x66, 0xd9, 0xd0,
			0x8c, 0x3f, 0x31, 0xfd, 0xda, 0xec, 0x5e, 0x86, 0x36, 0x5a, 0x19, 0x7f, 0x93, 0x04, 0xc9, 0x4f,
			0xc9, 0x24, 0x8c, 0xb3, 0x7d, 0xfd, 0x4d, 0x8a, 0x3a, 0x0b, 0xd5, 0x3e, 0x1e, 0x28, 0xae, 0xb0,
			0x0f, 0x95, 0x46, 0x48, 0xb9, 0x8f, 0xb3, 0x16, 0x89, 0x01, 0xc3, 0x5f, 0xbb, 0x1c, 0x9c, 0x9f,
			0x54, 0x70, 0x0d, 0xe1, 0x1c, 0x71, 0x4d, 0xcc, 0x71, 0xc0, 0xce, 0x90, 0x77, 0xe5, 0xe6, 0x70,
			0x1e, 0x2e, 0x08, 0x90, 0xaa, 0x85, 0x74, 0xa8, 0x9a, 0xe2, 0x51, 0xe4, 0xc5, 0x6b, 0x52, 0x09,
			0x6f, 0x22, 0xe2, 0x76, 0x6b, 0x20, 0xd1, 0x6a, 0xa5, 0x82, 0x2a, 0xbd, 0x92, 0xca, 0x8a, 0x1d,
			0x64, 0xe7, 0xf7, 0x52, 0x90, 0xba, 0x40, 0x3d, 0xaa, 0x2a, 0xce, 0xbf, 0x4c, 0x88, 0xc1, 0xee,
			0xfd, 0x5e, 0x7f, 0x70, 0xec, 0x70, 0x22, 0x31, 0xa1, 0x80, 0x85, 0xdd, 0x6f, 0xf3, 0x83, 0x06,
			0xca, 0x50, 0x4f, 0x61, 0xb5, 0xbe, 0x63, 0xa2, 0xdc, 0x1f, 0x30, 0x82, 0xf2, 0x88, 0x3b, 0xdc,
			0xd7, 0x96, 0x2b, 0xd9, 0xc2, 0xc4, 0x55, 0xc8, 0x4d, 0x4b, 0xa5, 0x70, 0xcc, 0xe2, 0x8f, 0x85,
		},
	}

	password := "123123"

	random := make([]byte, 256)
	random[255] = 1

	inputCheck, err := GetInputCheckPassword(password, ap, random)
	assert.Nil(t, err)

	M1Expected := []uint8{
		0x99, 0x9d, 0xf9, 0x06, 0xbd, 0xa2, 0xc6, 0xcb, 0xb5, 0x2f, 0x50, 0x34, 0x06, 0xeb, 0xa2, 0xd0,
		0xd0, 0x50, 0x3a, 0xce, 0x0c, 0xc3, 0x02, 0xc3, 0x8f, 0x13, 0xee, 0x50, 0x10, 0xad, 0x40, 0x51,
	}

	assert.Equal(t, M1Expected, inputCheck.(*telegram.InputCheckPasswordSRPObj).M1)
}
